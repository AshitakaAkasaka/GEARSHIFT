#include <stdio.h>
#include <stdlib.h>
#include <dlfcn.h>
#include <stdint.h>

struct S3 {
	char entry_0
	char entry_1[3] NOT ACCESSED
	uint32_t entry_2
	uint32_t entry_3
	uint32_t entry_4
}
struct S2 {
	char entry_0
	char entry_1[3] NOT ACCESSED
	uint32_t entry_2
	uint32_t entry_3
	uint32_t entry_4
}
struct S1 {
	uint8_t* entry_0
	uint32_t entry_1
	uint32_t entry_2 NOT ACCESSED
	S2* entry_3
	S3* entry_4
}
struct S0 {
	uint32_t entry_0
	uint32_t entry_1
	S1* entry_2
}

typedef int(*func)(void* a, ...);

int main(int argc, char** argv) {
	void* handler = dlopen("/D:/CTF/research/gearshift/case6", RTLD_LAZY);
	void* base = *((void**)handler);
	func f = (func)(base + 2264);

	FILE* h = fopen(argv[1], "r");

	S0* ARG0;
	ARG0 = (S0*)malloc(16);
	fread((char*)&ARG0->entry_0, 1, 4, h);
	fread((char*)&ARG0->entry_1, 1, 4, h);
	ARG0->entry_2 = (S1*)malloc(32);
	ARG0->entry_2->entry_0 = (char*)malloc(8);
	fread((char*)ARG0->entry_2->entry_0, 1, 8, h);
	fread((char*)&ARG0->entry_2->entry_1, 1, 4, h);
	fread((char*)&ARG0->entry_2->entry_2, 1, 4, h);
	ARG0->entry_2->entry_3 = (S2*)malloc(16);
	fread((char*)&ARG0->entry_2->entry_3->entry_0, 1, 1, h);
	fread((char*)&ARG0->entry_2->entry_3->entry_1, 1, 3, h);
	fread((char*)&ARG0->entry_2->entry_3->entry_2, 1, 4, h);
	fread((char*)&ARG0->entry_2->entry_3->entry_3, 1, 4, h);
	fread((char*)&ARG0->entry_2->entry_3->entry_4, 1, 4, h);
	ARG0->entry_2->entry_4 = (S3*)malloc(16);
	fread((char*)&ARG0->entry_2->entry_4->entry_0, 1, 1, h);
	fread((char*)&ARG0->entry_2->entry_4->entry_1, 1, 3, h);
	fread((char*)&ARG0->entry_2->entry_4->entry_2, 1, 4, h);
	fread((char*)&ARG0->entry_2->entry_4->entry_3, 1, 4, h);
	fread((char*)&ARG0->entry_2->entry_4->entry_4, 1, 4, h);
	

	int res = f((void*)ARG0);

		free(ARG0->entry_2->entry_0);
	free(ARG0->entry_2->entry_3);
	free(ARG0->entry_2->entry_4);
	free(ARG0->entry_2);
	free(ARG0);
	

	printf("Result: %d\n", res);
}


